Public Sub main()
If ThisWorkbook.Sheets.count >= 2 Then
Sheets("Checker").Copy After:=Worksheets(Sheets.count)
    On Error Resume Next
    ActiveSheet.name = "New Sheet"
    Sheets("Checker").Delete
    End If
    
Sheets("Sheet1").Select
ActiveSheet.Copy After:=Worksheets(Sheets.count)
    On Error Resume Next
    ActiveSheet.name = "Checker"
Sheets("Checker").Select
Sheets("Checker").Columns(1).Insert
Sheets("Checker").Columns(1).Insert
Sheets("Checker").Columns(1).Insert

Sheets("Checker").Cells(1, 1) = "ALL"
Sheets("Checker").Cells(1, 2) = "FL"
Sheets("Checker").Cells(1, 3) = "CA"
Dim limit As Integer
limit = Sheets("Checker").Range("F" & Rows.count).End(xlUp).Row

Dim i As Integer

For i = 2 To limit
Sheets("Checker").Cells(i, 3) = Sheets("Checker").Cells(i, 17) + Sheets("Checker").Cells(i, 19) - Sheets("Checker").Cells(i, 21) + Sheets("Checker").Cells(i, 26)
Next i

Dim z As Integer

For z = 2 To limit
Sheets("Checker").Cells(z, 2) = Sheets("Checker").Cells(z, 18) + Sheets("Checker").Cells(z, 20) - Sheets("Checker").Cells(z, 22) + Sheets("Checker").Cells(z, 25)
Next z

Dim x As Integer

For x = 2 To limit
Sheets("Checker").Cells(x, 1) = Sheets("Checker").Cells(x, 2) + Sheets("Checker").Cells(x, 3)
Next x

Dim lel As Integer

lel = MsgBox("Only Show Negative Qty?", vbYesNo)



Dim track As Integer
Dim sht As Worksheet
'empty cell handling
Dim shtName As String
Dim count As Integer
Sheets.Add.name = "MISC"
For count = 2 To limit
shtName = Sheets("Checker").Cells(count, 4)
track = 0
For Each sht In ThisWorkbook.Worksheets
If sht.name = shtName Then
track = 1 + track
ElseIf shtName = "" Then
track = 1 + track
shtName = "MISC"
Else
track = track + 0
End If
Next sht
If track < 1 Then
Sheets.Add.name = shtName
Sheets("Checker").Rows(count).EntireRow.Copy Destination:=Sheets(shtName).Range("A" & Rows.count).End(xlUp).Offset(1)
End If
If track > 0 Then
Sheets("Checker").Rows(count).EntireRow.Copy Destination:=Sheets(shtName).Range("A" & Rows.count).End(xlUp).Offset(1)
End If
Next count
'copy headers
For Each sht In ThisWorkbook.Worksheets

Sheets("Checker").Rows(1).EntireRow.Copy Destination:=sht.Rows(1)

Next sht
'merge compatibles into one sheet
Dim startRow, startCol, lastRow, lastCol As Long
Dim headers As Range
Sheets.Add.name = "Compatible"
'Set Master sheet for consolidation
Set mtr = Worksheets("Compatible")

Set wb = ThisWorkbook
'Get Headers
Set headers = Application.InputBox("Select the Headers", Type:=8)

'Copy Headers into master
headers.Copy mtr.Range("A1")
startRow = headers.Row + 1
startCol = headers.Column

Debug.Print startRow, startCol
'loop through all sheets
For Each ws In wb.Worksheets
     'except the master sheet from looping
     If InStr(1, ws.name, "GEN") > 0 Or InStr(1, ws.name, "REV") > 0 Or InStr(1, ws.name, "REM") > 0 Then
        ws.Activate
        lastRow = ws.Cells(ws.Rows.count, startCol).End(xlUp).Row
        lastCol = ws.Cells(startRow, ws.Columns.count).End(xlToLeft).Column
        'get data from each worksheet and copy it into Master sheet
        ws.Range(ws.Cells(startRow, startCol), ws.Cells(lastRow, lastCol)).Copy _
        mtr.Range("A" & mtr.Cells(Rows.count, 1).End(xlUp).Row + 1)
           End If
Next ws

Worksheets("Compatible").Activate
'delete branded compatible/reman/rev sheets
For Each ws In wb.Worksheets
     'except the master sheet from looping
     If InStr(1, ws.name, "GEN") > 0 Or InStr(1, ws.name, "REV") > 0 Or InStr(1, ws.name, "REM") > 0 Then
        ws.Delete
           End If
Next ws

' sort sold qty by descending
If lel = 7 Then
'For Each ws In wb.Worksheets
'  ws.Columns("O:O").Select
'    ws.Sort.SortFields.Clear
'    ws.Sort.SortFields.Add2 Key:=Range( _
'        "O1:O26930"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
'    With ws.Sort
'        .SetRange Range("A2:AA26930")
'        .Header = xlNo
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
    
  
    'all thats left is delte rows past 50 and beautify
    
'Next ws
'clean non selling brands
'For Each ws In wb.Worksheets
' If ws.Cells(2, "O") < 1 Then
' ws.Delete
' End If
'Next ws

'beautify sheet
For Each ws In wb.Worksheets
    ws.Columns("I").EntireColumn.Delete
    ws.Columns("I").EntireColumn.Delete
    ws.Columns("I").EntireColumn.Delete
    ws.Columns("I").EntireColumn.Delete
Next ws

Sheets("Checker").Delete
'delete 80% items
'For Each ws In wb.Worksheets
'   Dim limits As Integer
'   Dim top As Integer
'   Dim tops As Double
'   limits = ws.UsedRange.Rows.count
'
'   tops = limits * 0.2
   
'   top = CInt(tops)
'   If top < 5 Then
'   top = 5
'   limit = 10
'   End If
   
   
   
  ' ws.Range("A" & top & ":Z" & limits).Select
  ' ws.Range("A" & top & ":Z" & limits).Delete
   'For top = top To limits
   'ws.Activate
   'ActiveSheet.Rows(top).EntireRow.Select
   'ActiveSheet.Rows(top).EntireRow.Delete
   'Next top
'Next ws

For Each ws In wb.Worksheets
    ws.Columns("A").ColumnWidth = 7.5
    ws.Columns("B").ColumnWidth = 7.5
    ws.Columns("C").ColumnWidth = 7.5
    ws.Columns("E").ColumnWidth = 15
    ws.Columns("F").ColumnWidth = 12
    ws.Columns("G").ColumnWidth = 43
    ws.Columns("K").Font.Bold = True
    ws.Columns("M").Font.Bold = True
    ws.Columns("N").Font.Bold = True
    ws.Columns("O").Font.Bold = True
    ws.Columns("P").Font.Bold = True
    ws.Columns("Q").Font.Bold = True
    ws.Columns("R").Font.Bold = True
    ws.Columns("A").Font.Bold = True
    ws.Columns("B").Font.Bold = True
    ws.Columns("C").Font.Bold = True
    ws.Columns("E").Font.Bold = True
    ws.Columns("L").EntireColumn.Delete
    
Next ws

For Each ws In ActiveWorkbook.Worksheets
        lngLstRow = ws.UsedRange.Rows.count
        lngLstCol = ws.UsedRange.Columns.count

        For Each rngCell In ws.Range("A1:A" & lngLstRow)
            If rngCell.Value <> "" Then
                r = rngCell.Row
                c = rngCell.Column

                With ws.Range(ws.Cells(r, c), ws.Cells(r, lngLstCol)).Borders
                    .LineStyle = xlContinuous    'Setting style of border line
                    .Weight = xlThin    'Setting weight of border line
                    .ColorIndex = xlAutomatic    'Setting colour of border line
                End With
            End If
        Next
    Next

End If
If lel = 6 Then
Application.ScreenUpdating = True
DoEvents
Sheets("Sheet1").Delete
Sheets("Checker").Delete
For Each ws In wb.Worksheets
ws.Activate
ws.Columns("A:C").Select 'ws.Columns("A:A").Select
Dim kekw As Integer
kekw = 2
For kekw = 2 To ws.UsedRange.Rows.count
If ws.Cells(kekw, 1) >= 0 And ws.Cells(kekw, 2) >= 0 And ws.Cells(kekw, 3) >= 0 Then
ws.Rows(kekw).Delete xlShiftUp
kekw = kekw - 1
End If
If IsEmpty(ws.Cells(kekw + 1, 1)) Then
kekw = kekw + 23000
If IsEmpty(ws.Cells(2, 1)) Then
ws.Delete
End If
End If
Next kekw

   ' ws.Sort.SortFields.Clear
    'ws.Sort.SortFields.Add2 Key:=Range( _
    '    "A1:A26930"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
     '   xlSortNormal
   ' With ws.Sort
    '    .SetRange Range("A2:AA26930")
     '   .Header = xlNo
      '  .MatchCase = False
       ' .Orientation = xlTopToBottom
        '.SortMethod = xlPinYin
        '.Apply
    'End With

    'all thats left is delte rows past 50 and beautify
    'needs to auto sort like old times, then I can email the entire workbook to list, thats all mayne
Next ws

End If
End Sub